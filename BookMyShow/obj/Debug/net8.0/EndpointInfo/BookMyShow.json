{
  "openapi": "3.0.4",
  "info": {
    "title": "BookMyShow API",
    "version": "v1"
  },
  "paths": {
    "/api/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Authenticates a user and generates a JWT token.",
        "requestBody": {
          "description": "The login credentials.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Movies": {
      "get": {
        "tags": [
          "Movies"
        ],
        "summary": "Retrieves all movies.",
        "responses": {
          "200": {
            "description": "Returns the list of movies"
          },
          "404": {
            "description": "If no movies are found"
          }
        }
      },
      "post": {
        "tags": [
          "Movies"
        ],
        "summary": "Adds a new movie.",
        "requestBody": {
          "description": "The movie details to add.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AddMovieDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddMovieDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddMovieDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddMovieDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the added movie"
          },
          "404": {
            "description": "If the movie could not be added"
          }
        }
      }
    },
    "/api/Movies/{id}": {
      "get": {
        "tags": [
          "Movies"
        ],
        "summary": "Retrieves a movie by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the movie to retrieve.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the movie with the specified ID"
          },
          "404": {
            "description": "If the movie is not found"
          }
        }
      },
      "put": {
        "tags": [
          "Movies"
        ],
        "summary": "Updates an existing movie.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the movie to update.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The updated movie details.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMovieDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMovieDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMovieDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMovieDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the updated movie"
          },
          "404": {
            "description": "If the movie to update is not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Movies"
        ],
        "summary": "Deletes a movie.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the movie to delete.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a message indicating the result of the deletion"
          },
          "404": {
            "description": "If the movie to delete is not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Movies"
        ],
        "summary": "Applies a JSON patch to an existing movie.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the movie to patch.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON patch document.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the patched movie"
          },
          "400": {
            "description": "If the JSON patch document is invalid"
          },
          "404": {
            "description": "If the movie to patch is not found"
          }
        }
      }
    },
    "/api/Movies/{title}": {
      "get": {
        "tags": [
          "Movies"
        ],
        "summary": "Retrieves movies by their title.",
        "parameters": [
          {
            "name": "title",
            "in": "path",
            "description": "The title of the movies to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the list of movies with the specified title"
          },
          "404": {
            "description": "If no movies are found with the specified title"
          }
        }
      }
    },
    "/api/Reviews": {
      "post": {
        "tags": [
          "Reviews"
        ],
        "summary": "Adds a new review.",
        "requestBody": {
          "description": "The review details to add.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AddReviewDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddReviewDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddReviewDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddReviewDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Reviews/{id}": {
      "put": {
        "tags": [
          "Reviews"
        ],
        "summary": "Updates an existing review.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the review to update.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The updated review details.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReviewDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReviewDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReviewDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReviewDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Reviews/{movieName}": {
      "get": {
        "tags": [
          "Reviews"
        ],
        "summary": "Retrieves reviews for a specific movie.",
        "parameters": [
          {
            "name": "movieName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Reviews/{reviewid}": {
      "delete": {
        "tags": [
          "Reviews"
        ],
        "summary": "Deletes a review.",
        "parameters": [
          {
            "name": "reviewid",
            "in": "path",
            "description": "The ID of the review to delete.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/TheatreManagement/Theatres": {
      "get": {
        "tags": [
          "TheatreManagement"
        ],
        "summary": "Retrieves all theatres.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/TheatreManagement/Theatre/{theatreid}": {
      "delete": {
        "tags": [
          "TheatreManagement"
        ],
        "summary": "Deletes a theatre by the theatre's ID.",
        "parameters": [
          {
            "name": "theatreid",
            "in": "path",
            "description": "The ID of the theatre.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/TheatreManagement/Screens/{theatreid}": {
      "get": {
        "tags": [
          "TheatreManagement"
        ],
        "summary": "Retrieves all screens for a specific theatre.",
        "parameters": [
          {
            "name": "theatreid",
            "in": "path",
            "description": "The ID of the theatre to retrieve screens for.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/TheatreManagement/Shows/{screenid}": {
      "get": {
        "tags": [
          "TheatreManagement"
        ],
        "summary": "Retrieves all shows for a specific screen.",
        "parameters": [
          {
            "name": "screenid",
            "in": "path",
            "description": "The ID of the screen to retrieve shows for.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/TheatreManagement/Show/{showid}": {
      "get": {
        "tags": [
          "TheatreManagement"
        ],
        "summary": "Retrieves a specific show by its ID.",
        "parameters": [
          {
            "name": "showid",
            "in": "path",
            "description": "The ID of the show to retrieve.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/TheatreManagement/Shows/ByMovie/{movieName}": {
      "get": {
        "tags": [
          "TheatreManagement"
        ],
        "summary": "Retrieves all shows for a specific movie name.",
        "parameters": [
          {
            "name": "movieName",
            "in": "path",
            "description": "The name of the movie to retrieve shows for.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/TheatreManagement/Screen": {
      "post": {
        "tags": [
          "TheatreManagement"
        ],
        "summary": "Adds a new screen to a theatre.",
        "requestBody": {
          "description": "The screen details to add.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AddScreenDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddScreenDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddScreenDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddScreenDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/TheatreManagement/Screen/{screenId}": {
      "delete": {
        "tags": [
          "TheatreManagement"
        ],
        "summary": "Deletes a screen from the database.",
        "parameters": [
          {
            "name": "screenId",
            "in": "path",
            "description": "The ID of the screen to delete.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "TheatreManagement"
        ],
        "summary": "Updates an existing screen in the database.",
        "parameters": [
          {
            "name": "screenId",
            "in": "path",
            "description": "The ID of the screen to update.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The updated screen details.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateScreenDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateScreenDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateScreenDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateScreenDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/TheatreManagement/Show": {
      "post": {
        "tags": [
          "TheatreManagement"
        ],
        "summary": "Adds a new show to a screen.",
        "requestBody": {
          "description": "The show details to add.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AddShowDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddShowDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddShowDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddShowDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/TheatreManagement/Show/{showId}": {
      "delete": {
        "tags": [
          "TheatreManagement"
        ],
        "summary": "Deletes a show from the database.",
        "parameters": [
          {
            "name": "showId",
            "in": "path",
            "description": "The ID of the show to delete.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "TheatreManagement"
        ],
        "summary": "Updates an existing show in the database.",
        "parameters": [
          {
            "name": "showId",
            "in": "path",
            "description": "The ID of the show to update.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The updated show details.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateShowDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateShowDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateShowDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateShowDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/TheatreManagement/{ownerId}": {
      "delete": {
        "tags": [
          "TheatreManagement"
        ],
        "summary": "Removes a theatre from a theatre owner.",
        "parameters": [
          {
            "name": "ownerId",
            "in": "path",
            "description": "The ID of the theatre owner.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Theatres/TheatreOwners": {
      "get": {
        "tags": [
          "Theatres"
        ],
        "summary": "Retrieves all theatre owners.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Theatres/{ownerid}": {
      "get": {
        "tags": [
          "Theatres"
        ],
        "summary": "Retrieves a theatre owner by their ID.",
        "parameters": [
          {
            "name": "ownerid",
            "in": "path",
            "description": "The ID of the theatre owner to retrieve.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Theatres"
        ],
        "summary": "Adds a new theatre to a theatre owner.",
        "parameters": [
          {
            "name": "ownerid",
            "in": "path",
            "description": "The ID of the theatre owner.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The theatre details to add.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AddTheatreDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddTheatreDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddTheatreDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddTheatreDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Theatres"
        ],
        "summary": "Deletes a theatre by the theatre owner's ID.",
        "parameters": [
          {
            "name": "ownerid",
            "in": "path",
            "description": "The ID of the theatre owner.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Tickets/bookTicket": {
      "post": {
        "tags": [
          "Tickets"
        ],
        "summary": "Books a ticket for a show.",
        "requestBody": {
          "description": "The ticket booking details.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BookTicketDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookTicketDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BookTicketDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BookTicketDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Tickets/availableSeats/{showId}": {
      "get": {
        "tags": [
          "Tickets"
        ],
        "summary": "Retrieves the available seats for a specific show.",
        "parameters": [
          {
            "name": "showId",
            "in": "path",
            "description": "The ID of the show to retrieve available seats for.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Tickets/cancelTicket/{ticketId}": {
      "delete": {
        "tags": [
          "Tickets"
        ],
        "summary": "Cancels a ticket and restores the seats.",
        "parameters": [
          {
            "name": "ticketId",
            "in": "path",
            "description": "The ID of the ticket to cancel.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Tickets/{ticketId}": {
      "get": {
        "tags": [
          "Tickets"
        ],
        "summary": "Retrieves the details of a specific ticket.",
        "parameters": [
          {
            "name": "ticketId",
            "in": "path",
            "description": "The ID of the ticket to retrieve details for.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Tickets/bookedTickets": {
      "get": {
        "tags": [
          "Tickets"
        ],
        "summary": "Retrieves all booked tickets.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Tickets/customerTickets/{customerId}": {
      "get": {
        "tags": [
          "Tickets"
        ],
        "summary": "Retrieves all tickets booked by a specific customer.",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "The ID of the customer to retrieve tickets for.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Retrieves all users.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Adds a new user.",
        "requestBody": {
          "description": "The user details to add.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AddUserDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddUserDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddUserDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/{userid}": {
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Deletes a user.",
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "description": "The ID of the user to delete.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Retrieves a specific user by their ID.",
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "description": "The ID of the user to retrieve.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AddMovieDto": {
        "required": [
          "adminId",
          "duration",
          "genre",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "genre": {
            "type": "string",
            "nullable": true
          },
          "duration": {
            "type": "integer",
            "format": "int32"
          },
          "rating": {
            "type": "number",
            "format": "double"
          },
          "adminId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "AddReviewDto": {
        "required": [
          "movieId",
          "rating",
          "userId"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "movieId": {
            "type": "string",
            "format": "uuid"
          },
          "rating": {
            "maximum": 5,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "review": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddScreenDto": {
        "required": [
          "screenNumber",
          "theatreId"
        ],
        "type": "object",
        "properties": {
          "theatreId": {
            "type": "string",
            "format": "uuid"
          },
          "screenNumber": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AddShowDto": {
        "required": [
          "movieId",
          "screenId",
          "showDate",
          "showTime",
          "ticketPrice",
          "totalSeats"
        ],
        "type": "object",
        "properties": {
          "screenId": {
            "type": "string",
            "format": "uuid"
          },
          "movieId": {
            "type": "string",
            "format": "uuid"
          },
          "showTime": {
            "type": "string",
            "nullable": true
          },
          "showDate": {
            "type": "string",
            "nullable": true
          },
          "totalSeats": {
            "type": "integer",
            "format": "int32"
          },
          "ticketPrice": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "AddTheatreDto": {
        "required": [
          "city",
          "street",
          "theatreName"
        ],
        "type": "object",
        "properties": {
          "theatreName": {
            "type": "string",
            "nullable": true
          },
          "street": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddUserDto": {
        "required": [
          "email",
          "password",
          "phoneNumber",
          "role",
          "userName"
        ],
        "type": "object",
        "properties": {
          "userName": {
            "minLength": 1,
            "type": "string"
          },
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "phoneNumber": {
            "minLength": 1,
            "type": "string",
            "format": "tel"
          },
          "password": {
            "minLength": 1,
            "type": "string"
          },
          "role": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "BookTicketDto": {
        "required": [
          "customerId",
          "showId"
        ],
        "type": "object",
        "properties": {
          "customerId": {
            "type": "string",
            "format": "uuid"
          },
          "showId": {
            "type": "string",
            "format": "uuid"
          },
          "seatNo": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LoginDto": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Operation": {
        "type": "object",
        "properties": {
          "operationType": {
            "$ref": "#/components/schemas/OperationType"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OperationType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer",
        "format": "int32"
      },
      "UpdateMovieDto": {
        "required": [
          "duration",
          "genre",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "genre": {
            "type": "string",
            "nullable": true
          },
          "duration": {
            "type": "integer",
            "format": "int32"
          },
          "rating": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "UpdateReviewDto": {
        "required": [
          "rating"
        ],
        "type": "object",
        "properties": {
          "rating": {
            "maximum": 5,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "review": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateScreenDto": {
        "required": [
          "screenNumber"
        ],
        "type": "object",
        "properties": {
          "screenNumber": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UpdateShowDto": {
        "required": [
          "movieId",
          "showDate",
          "showTime",
          "ticketPrice"
        ],
        "type": "object",
        "properties": {
          "movieId": {
            "type": "string",
            "format": "uuid"
          },
          "showTime": {
            "type": "string",
            "nullable": true
          },
          "showDate": {
            "type": "string",
            "nullable": true
          },
          "ticketPrice": {
            "type": "number",
            "format": "double"
          },
          "availableSeats": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Please enter JWT with Bearer into field",
        "scheme": "Bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}